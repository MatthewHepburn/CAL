[
  {
    "data-question": {
      "type": "minimize-table",
      "text": "The machine below accepts the language defined by the regular expression <b>(aa)*aab</b>. Minimize it.",
      "allowEpsilon": "true",
      "splitSymbol": "",
      "useShortNames": true
    },
    "data-machinelist": [
      {
        "nodes": [
          {
            "id": "A",
            "x": 41,
            "y": 201,
            "isInit": true,
            "name": "Q0"
          },
          {
            "id": "B",
            "x": 39,
            "y": 101,
            "name": "Q1"
          },
          {
            "id": "C",
            "x": 141,
            "y": 200,
            "name": "Q2"
          },
          {
            "id": "D",
            "x": 241,
            "y": 202,
            "name": "Q3"
          },
          {
            "id": "E",
            "x": 341,
            "y": 199,
            "name": "Q4"
          },
          {
            "id": "F",
            "x": 335,
            "y": 99,
            "isAcc": true,
            "name": "Q5"
          }
        ],
        "links": [
          {
            "to": "B",
            "from": "A",
            "input": [
              "a"
            ]
          },
          {
            "to": "A",
            "from": "B",
            "input": [
              "a"
            ]
          },
          {
            "to": "C",
            "from": "A",
            "hasEps": true
          },
          {
            "to": "D",
            "from": "C",
            "input": [
              "a"
            ]
          },
          {
            "to": "E",
            "from": "D",
            "input": [
              "a"
            ]
          },
          {
            "to": "F",
            "from": "E",
            "input": [
              "b"
            ]
          }
        ],
        "attributes": {
          "alphabet": [
            "a",
            "b"
          ],
          "allowEpsilon": true
        }
      }
    ],
    "data-options": {},
    "filename": "minimization-2",
    "name": "Minimization II",
    "id": "9c4d4a2cf3d9405c9fe99f2ac7e5aecc"
  },
  {
    "data-question": {
      "type": "minimize-table",
      "text": "It can be useful to reduce a FSM to its <b>minimal</b> form, where the machine contains the minimum number of states necessary to accept its language.<br>Using the <b>implication chart</b> method, reduce the machine below to its minimal form.<br><br>For each pair of states, determine if the states are <b>distinguishable</b>. States are distinguishable if there exists an input sequence that is accepted from one state but not from the other.<br>If a pair are indistinguishable, combine them until only distinguishable states remain.",
      "allowEpsilon": "false",
      "splitSymbol": "",
      "useShortNames": true
    },
    "data-machinelist": [
      {
        "nodes": [
          {
            "id": "A",
            "x": 108,
            "y": 128,
            "isInit": true,
            "name": "Q0"
          },
          {
            "id": "B",
            "x": 181,
            "y": 198,
            "name": "Q2"
          },
          {
            "id": "C",
            "x": 176,
            "y": 55,
            "name": "Q1"
          },
          {
            "id": "D",
            "x": 249,
            "y": 124,
            "isAcc": true,
            "name": "Q3"
          }
        ],
        "links": [
          {
            "to": "B",
            "from": "A",
            "input": [
              "a"
            ]
          },
          {
            "to": "D",
            "from": "B",
            "input": [
              "a",
              "b"
            ]
          },
          {
            "to": "C",
            "from": "A",
            "input": [
              "b"
            ]
          },
          {
            "to": "D",
            "from": "C",
            "input": [
              "a",
              "b"
            ]
          },
          {
            "to": "C",
            "from": "D",
            "input": [
              "a",
              "b"
            ]
          }
        ],
        "attributes": {
          "alphabet": [
            "a",
            "b"
          ],
          "allowEpsilon": false
        }
      }
    ],
    "data-options": {},
    "filename": "intro-to-minimization",
    "name": "Introducing minimization",
    "id": "8665bb8341774d1e99a6ef3f89c91128"
  },
  {
    "data-question": {
      "type": "give-input",
      "text": "Test",
      "allowEpsilon": "true",
      "splitSymbol": "",
      "target": "output",
      "outputSequence": [
        "f",
        "s",
        "m"
      ]
    },
    "data-machinelist": [
      {
        "nodes": [
          {
            "id": "A",
            "x": 99,
            "y": 125,
            "isInit": true
          },
          {
            "id": "B",
            "x": 199,
            "y": 120
          },
          {
            "id": "C",
            "x": 289,
            "y": 77
          },
          {
            "id": "D",
            "x": 282,
            "y": 175
          },
          {
            "id": "E",
            "x": 373,
            "y": 132,
            "isAcc": true
          }
        ],
        "links": [
          {
            "to": "B",
            "from": "A",
            "input": [
              "a"
            ],
            "output": {
              "a": "F"
            }
          },
          {
            "to": "C",
            "from": "B",
            "input": [
              "a"
            ]
          },
          {
            "to": "D",
            "from": "B",
            "input": [
              "b"
            ]
          },
          {
            "to": "E",
            "from": "D",
            "input": [
              "a",
              "b"
            ]
          },
          {
            "to": "E",
            "from": "C",
            "input": [
              "b"
            ]
          }
        ],
        "attributes": {
          "alphabet": [
            "a",
            "b"
          ],
          "isMealy": true
        }
      }
    ],
    "data-options": {},
    "filename": "test-transducer",
    "name": "test transducer",
    "id": "f7284882173e41cd9be66960d1be262d"
  },
  {
    "data-question": {
      "type": "dfa-convert",
      "text": "The machine on the left is nondeterministic. Construct the equivilant DFA on the right.",
      "allowEpsilon": "false",
      "splitSymbol": ""
    },
    "data-machinelist": [
      {
        "nodes": [
          {
            "id": "A",
            "x": 85,
            "y": 127,
            "isInit": true,
            "name": "Q1"
          },
          {
            "id": "B",
            "x": 161,
            "y": 62,
            "name": "Q3"
          },
          {
            "id": "C",
            "x": 250,
            "y": 108,
            "isAcc": true,
            "name": "Q4"
          },
          {
            "id": "D",
            "x": 172,
            "y": 177,
            "name": "Q2"
          },
          {
            "id": "E",
            "x": 272,
            "y": 175,
            "isAcc": true,
            "name": "Q5"
          }
        ],
        "links": [
          {
            "to": "B",
            "from": "A",
            "input": [
              "a"
            ]
          },
          {
            "to": "C",
            "from": "B",
            "input": [
              "a"
            ]
          },
          {
            "to": "D",
            "from": "A",
            "input": [
              "a"
            ]
          },
          {
            "to": "C",
            "from": "C",
            "input": [
              "a"
            ]
          },
          {
            "to": "E",
            "from": "D",
            "input": [
              "b"
            ]
          },
          {
            "to": "D",
            "from": "D",
            "input": [
              "a"
            ]
          }
        ],
        "attributes": {
          "alphabet": [
            "a",
            "b"
          ],
          "allowEpsilon": true
        }
      },
      {
        "nodes": [
          {
            "id": "A",
            "x": 100,
            "y": 125,
            "isInit": true,
            "name": "{Q1}"
          }
        ],
        "links": [],
        "attributes": {
          "alphabet": [
            "a",
            "b"
          ],
          "allowEpsilon": true
        }
      }
    ],
    "data-options": {},
    "filename": "test-dfa-convert",
    "name": "test-dfa-convert",
    "id": "9c2e07f62096451d8da3190ca81baebb"
  },
  {
    "data-question": {
      "type": "dfa-convert",
      "text": "Test question",
      "allowEpsilon": "true",
      "splitSymbol": ""
    },
    "data-machinelist": [
      {
        "nodes": [
          {
            "id": "A",
            "x": 104,
            "y": 180,
            "isInit": true,
            "name": "Q1"
          },
          {
            "id": "B",
            "x": 195,
            "y": 138,
            "name": "Q2"
          },
          {
            "id": "C",
            "x": 187,
            "y": 38,
            "name": "Q3"
          },
          {
            "id": "D",
            "x": 283,
            "y": 184,
            "name": "Q4"
          },
          {
            "id": "E",
            "x": 192,
            "y": 226,
            "isAcc": true,
            "name": "Q5"
          }
        ],
        "links": [
          {
            "to": "B",
            "from": "A",
            "input": [
              "a"
            ]
          },
          {
            "to": "C",
            "from": "B",
            "input": [
              "b"
            ]
          },
          {
            "to": "B",
            "from": "C",
            "input": [
              "b"
            ]
          },
          {
            "to": "D",
            "from": "B",
            "input": [
              "b"
            ]
          },
          {
            "to": "E",
            "from": "D",
            "input": [
              "c"
            ]
          },
          {
            "to": "A",
            "from": "E",
            "hasEps": true
          }
        ],
        "attributes": {
          "alphabet": [
            "a",
            "b",
            "c"
          ],
          "allowEpsilon": true
        }
      },
      {
        "nodes": [
          {
            "id": "A",
            "x": 100,
            "y": 125,
            "isInit": true,
            "name": "{Q1}"
          }
        ],
        "links": [],
        "attributes": {
          "alphabet": [
            "a",
            "b",
            "c"
          ],
          "allowEpsilon": true
        }
      }
    ],
    "data-options": {},
    "filename": "test-dfa-convert-2",
    "name": "test-dfa-convert-2",
    "id": "8b59c1017b6c494198ec4db9c1671bb7"
  },
  {
    "data-question": {
      "type": "dfa-convert",
      "text": "Text of the question. HTML tags allowed.",
      "allowEpsilon": "true",
      "splitSymbol": ""
    },
    "data-machinelist": [
      {
        "nodes": [
          {
            "id": "A",
            "x": 81,
            "y": 125,
            "isInit": true,
            "name": "Q2"
          },
          {
            "id": "B",
            "x": 105,
            "y": 67,
            "isInit": true,
            "name": "Q1"
          },
          {
            "id": "C",
            "x": 99,
            "y": 193,
            "isInit": true,
            "name": "Q3"
          },
          {
            "id": "D",
            "x": 204,
            "y": 59,
            "name": "Q4"
          },
          {
            "id": "E",
            "x": 304,
            "y": 57,
            "name": "Q5"
          },
          {
            "id": "F",
            "x": 404,
            "y": 65,
            "isAcc": true,
            "name": "Q6"
          },
          {
            "id": "G",
            "x": 180,
            "y": 114,
            "name": "Q7"
          },
          {
            "id": "H",
            "x": 197,
            "y": 213,
            "isAcc": true,
            "name": "Q8"
          },
          {
            "id": "I",
            "x": 274,
            "y": 149,
            "name": "Q9"
          }
        ],
        "links": [
          {
            "to": "D",
            "from": "B",
            "input": [
              "a1"
            ]
          },
          {
            "to": "E",
            "from": "D",
            "hasEps": true
          },
          {
            "to": "F",
            "from": "E",
            "hasEps": true
          },
          {
            "to": "E",
            "from": "F",
            "input": [
              "a1"
            ]
          },
          {
            "to": "G",
            "from": "A",
            "input": [
              "a2",
              "a3"
            ]
          },
          {
            "to": "H",
            "from": "G",
            "input": [
              "a3"
            ]
          },
          {
            "to": "H",
            "from": "C",
            "input": [
              "a2"
            ]
          },
          {
            "to": "I",
            "from": "H",
            "input": [
              "a2"
            ]
          },
          {
            "to": "G",
            "from": "I"
          }
        ],
        "attributes": {
          "alphabet": [
            "a1",
            "a2",
            "a3"
          ],
          "allowEpsilon": true
        }
      },
      {
        "nodes": [
          {
            "id": "A",
            "x": 100,
            "y": 125,
            "isInit": true,
            "name": "{Q1,Q2,Q3}"
          }
        ],
        "links": [],
        "attributes": {
          "alphabet": [
            "a1",
            "a2",
            "a3"
          ],
          "allowEpsilon": true
        }
      }
    ],
    "data-options": {},
    "filename": "filename",
    "name": "Question Title",
    "id": "e70379ea0a384e9a95c569dd9c41e959"
  }
]