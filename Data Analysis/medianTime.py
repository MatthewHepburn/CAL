#! /bin/python3
import json
import os
import statistics
import math


def main():
    statsObj = getStats()
    users = statsObj["users"]

    totalUsers = len(users.keys())
    print("Total users:\t", totalUsers)

    # Filter out users who do not meet the inclusion criteria
    toDel = []
    for userID in users:
        if not includeUser(userID):
            toDel.append(userID)
    for userID in toDel:
        users.pop(userID)


    totalTimes = []
    for userID in users:
        user = users[userID]
        totalTimes.append(getTotalTime(user))

    totalTimes.sort()

    print(totalTimes)

    nTimes = len(totalTimes)
    if nTimes % 2 == 0:
        median = (totalTimes[(nTimes//2) - 1] + totalTimes[nTimes//2])/2
    else:
        median = totalTimes[nTimes//2]

    if median < 60:
        print("median time = ", median, " seconds")
    else:
        print("median time = ", median/60, " minutes = ", median, " seconds")


def includeUser(userID):
    # Users must have a standard UUID as generated by the tool
    return len(userID) == 36

def getTotalTime(user):
    # Returns the total time spent on all pages.
    totalTime = 0
    pages = user["totalTimeOnPage"]
    for pageID in pages:
        totalTime += pages[pageID]
    return totalTime

def getStats():
    with open("full_stats.json", "r") as dataFile:
        stats = json.load(dataFile)
        return stats

if __name__ == '__main__':
    main()